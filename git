#!/bin/sh
set -e
# BUGS
# * `git commit -m 'meg'` seams to be broken # workaround: `git commit`

# This script expends the `git` command by creating a local mirror, from which then will be cloned to speed up a download process.
#
# 2) Get command, repo url, options and arguments
# 3) ??
# 4) Rewrite url to local path
# 5) Pass call to `/usr/bin/git`

_PWD="$( pwd )"
#CALL=${*}
CALL=${@}						# ex: --bare --no-pager clone --reference /path/to/repo "${REPO_URL}" ["${REPO_NAME}"]
#CALL="${*}"
#CALL="${@}"

MIRROR_DIR="${HOME}/var/cache/gitmirror"		# FIXME

#if $( echo "${CALL}" | grep --quiet " clone " -- ); then
#	GIT_COMMAND="clone"
#fi

case ${CALL} in
	*clone* )
		GIT_COMMAND="clone"
		;;
	*fetch* )
		GIT_COMMAND="fetch"
		;;
	*pull* )
		GIT_COMMAND="pull"
		;;
	*"remote update"* )
		GIT_COMMAND="remote update"
		;;
	* )
		:
		;;
esac

# TODO 
# Add support for
# `git fetch`
# `git pull`
# `git remote * update *`
#

case "${GIT_COMMAND}" in

	clone )
#		set -x
		set -- $( echo "git ${CALL}" )

		if [ ${#} -eq 2 ]; then
			/usr/bin/git clone 2>&1 && exit 0
			exit 1
		fi

		while [ ${#} -ne 0 ]; do
		
			if [ ${#} -eq 2 ]; then
		
				_ARG1=${1}
				shift
				_ARG2=${1}
				
				case ${_ARG2} in 
					*@*|*://*|/*)
						REPO_URL="${_ARG2}"
#						REPO_NAME=""
						;;
					*)
						REPO_URL="${_ARG1}"
						REPO_NAME="${_ARG2}"
						;;
				esac
			else
				shift
			fi
		done
		
		# FIXME
		# See: http://stackoverflow.com/a/2514986
		# This does not reflect all posiblitys
		# TODO: Match any user @ any host

		# Strip the following character from URL to build a path
		# any schema			*://*
		# user name				.*@
		# local $MIRROR_DIR		
		# port number			:[0-9]+ 	# TODO ?
		# 
		#						./
		LOCAL_PATH="$( 
			echo $REPO_URL | \
			sed -e 's|.*://||' \
				-e 's|.*@||' \
				-e 's|[/]*$HOME/var/cache/gitmirror||' \
				-e 's|:|/|' \
				-e 's|:/|/|'\
				-e 's|^\./||' \
				-- \
		)"

		case ${LOCAL_PATH} in
			*.git )
				:
				;;
			* )
				LOCAL_PATH="${LOCAL_PATH}.git"
		esac
		
		LOCAL_MIRROR="${MIRROR_DIR}/${LOCAL_PATH}"	# ex: /$HOME/var/cache/gitmirror/github.com/bittorf/kalua.git
		REPO_DIR="${LOCAL_PATH##*/}"				# ex: kalua.git

		if [ -z ${REPO_DIR} ]; then
			exit 1
		fi

		if [ ! -d "${LOCAL_MIRROR}" ]; then
			TEMP_PATH="${LOCAL_MIRROR%/*}"			# ex: /$HOME/var/cache/gitmirror/github.com/bittorf
			mkdir -p "${TEMP_PATH}"
			cd "${TEMP_PATH}"
			/usr/bin/git ${GIT_OPTS} clone --mirror ${REPO_URL}

		else
			cd "${LOCAL_MIRROR}"
			/usr/bin/git remote update
		fi

		# change directory back to our working directory
		cd "${_PWD}"
		NEW_CALL="$( \
			echo "${CALL}" | \
				sed -e 's|'"${REPO_URL}"'|file://'"${LOCAL_MIRROR}"'|' \
				)"	# rewrites URL for our git clone call
		/usr/bin/git ${NEW_CALL}
#		set +x
	;;

	"fetch" | "pull" | "remote update" )
		set -- $( git remote -v )
		LOCAL_MIRROR="${2}"
		TEMP_PATH="${LOCAL_MIRROR#file://}"
		cd "${TEMP_PATH}"
		/usr/bin/git remote update
		cd "${_PWD}"
		/usr/bin/git ${CALL}
;;

	# any other git submodul call
	* )
		# TODO In case of commit, all arguments behind '-m' should be grouped together via quotes.
		/usr/bin/git ${CALL}
	;;
esac
